'use strict';

const STEP_DELAY = 500;
const REDIS_HOST = '127.0.0.1';
const REDIS_PORT = 6379;
const QUEUE_1 = 'first-queue';

const { random } = require('lodash');
const { of } = require('rxjs');
const { delay, take, repeat } = require('rxjs/operators');
const Queue = require('../index');

const createQueue = (name, opts = {}) => {
  const queue = new Queue(name, {
    redis: opts.redis || { host: REDIS_HOST, port: REDIS_PORT }
  });

  return queue;
};

const firstQ = createQueue(QUEUE_1);

const tasks$ = of(null)
  .pipe(
    delay(STEP_DELAY),
    repeat()
  )
  .subscribe(() => {
    const num = random(0, 10000);

    firstQ.add(
      'ftask-1',
      { num, task: 'ftask-1' },
      {
        attempts: 3,
        removeOnComplete: true
      }
    );
  });

process.on('SIGINT', () => {
  tasks$.unsubscribe();

  firstQ.close();

  process.exit(0);
});
