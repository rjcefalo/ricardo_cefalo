'use strict'

const REDIS_HOST = '127.0.0.1'
const REDIS_PORT = 6379
const QUEUE_1 = 'first-queue'
const QUEUE_2 = 'second-queue'

const { resolve } = require('path')
const Queue = require('../index');

const createQueue = (name, opts = {}) => {
  const queue = new Queue(name, {
    redis: opts.redis || { host: REDIS_HOST, port: REDIS_PORT }
  })

  return queue
}

console.log('start worker...')

const firstQ = createQueue(QUEUE_1)
const secondQ = createQueue(QUEUE_2)
const queues = [firstQ, secondQ]

firstQ.process('ftask-1', 5, resolve('proc1.js'))
secondQ.process('stask-1', 5, resolve('proc2.js'))

queues.map(queue => {
  queue
    .on('error', err => {
      console.log(`error ${queue.name}`)
      console.log(err)
    })
    .on('failed', (job, err) => {
      console.log(`failed ${queue.name}`)
      console.log(job.data)
      console.log(err)
    })
})

process.on('SIGINT', async () => {
  await Promise.all(queues.map(queue => queue.close()))

  process.exit(0)
})
